
class Solution {
public:
    
 
    int help(vector<int>& nums , int start, int end)
    {
       int n=end-start+1;
        vector<int> dp(n); 
        
        dp[0]=nums[start];
        dp[1]=max(nums[start] , nums[start+1]);
        for(int i=start+2;i<=end;i++)
        {
            dp[i-start]=max(dp[i-start-1] , nums[i]+dp[i-start-2]);
        }
        return dp[end-start];
    }


    int rob(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        if(nums.size()==1)
            return nums[0];
        if(nums.size()==2)
            return max(nums[0], nums[1]);
        
        int a= help(nums , 0 , nums.size()-2);  // if 1 ele included
     int b= help(nums , 1 , nums.size()-1);  // if 1 ele not included
    return max(a,b);
    }
};