
class Solution {
public:
    string longestPalindrome(string s) {
        if(s.size() == 0)
            return "";
        if(s.size() == 1)
            return s;
        int n=s.length();
        int max_len=1;
        int start , end;
        
        // odd length palindrome
   for(int i=0;i<n-1;i++)
        {
            int l=i , r=i;
       while(l>=0 && r<n)
       {
           if(s[l]==s[r])
           {
               l--;
               r++;
           }
           else
               break;
       }
       int len=r-l-1;
       if(len> max_len)
       {
           max_len=len;
           start=l+1;
       }
        }
        
        // even length palindrome
   for(int i=0;i<n-1;i++)
        {
            int l=i , r=i+1;
       while(l>=0 && r<n)
       {
           if(s[l]==s[r])
           {
               l--;
               r++;
           }
           else
               break;
       }
       int len=r-l-1;
       if(len> max_len)
       {
           max_len=len;
           start=l+1;
           
       }
        }
        
        return s.substr(start , max_len);
    }
};

